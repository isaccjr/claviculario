"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$6cr72*qme@!fvk7$3pkm+sn$^6zao4*si!0qa)$*++th*xczh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'claviculario_app',

    'django.contrib.sites',  # Necessário para o allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # Adicione os provedores que você quer usar:
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.microsoft',
    # 'allauth.socialaccount.providers.apple', # Apple é mais complexo, vamos deixar para depois
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request', # <-- ESTA É A PONTE ESSENCIAL
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'claviculario_db',
        'USER': 'postgres',
        'PASSWORD': 'P19b03M42$!',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'



# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# URL para onde o @login_required redireciona se o usuário NÃO está logado
LOGIN_URL = '/accounts/login/'

# URL para onde o usuário é enviado APÓS um login bem-sucedido
LOGIN_REDIRECT_URL = '/'

# URL para onde o usuário é enviado APÓS o LOGOUT
LOGOUT_REDIRECT_URL = '/login/'

# CONFIGURAÇÕES DO DJANGO-ALLAUTH
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1 # O allauth usa o "sites framework" do Django

TEMPLATES[0]['OPTIONS']['context_processors'].extend([
    'django.template.context_processors.request',
])


LOGIN_REDIRECT_URL = '/' # O allauth vai respeitar isso
LOGOUT_REDIRECT_URL = '/accounts/login/' # E isso também

# Configurações opcionais para personalizar o comportamento
ACCOUNT_EMAIL_VERIFICATION = "none" # Para começar, não vamos exigir verificação de e-mail
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False # O usuário não precisará criar um nome de usuário
ACCOUNT_AUTHENTICATION_METHOD = "username_email" # O login será feito com o e-mail
# Pula a página de confirmação "Continuar" e redireciona direto para o Google
SOCIALACCOUNT_LOGIN_ON_GET = True